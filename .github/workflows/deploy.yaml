name: Bygg, publish og deploy
on:
  push:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  build-and-publish:
    name: Bygg, test og publiser docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1
      - name: Setup gradle dependency cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew build
      - name: docker-build-push
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: bidrag
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    runs-on: ubuntu-latest
    name: Deploy to dev
    needs: build-and-publish

    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          IMAGE: ${{ needs.build-and-publish.outputs.image }}
    outputs:
      image: ${{ needs.build-and-publish.outputs.image }}
      tag: ${{ needs.build-and-publish.outputs.tag }}


  deploy-prod:
    runs-on: ubuntu-latest
    name: Deploy to prod
    if: github.ref == 'refs/heads/release'
    needs: build-and-publish

    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml
          IMAGE: ${{ needs.build-and-publish.outputs.image }}
    outputs:
      image: ${{ needs.build-and-publish.outputs.image }}
      tag: ${{ needs.build-and-publish.outputs.tag }}

  tag:
    runs-on: ubuntu-latest
    name: Tag release
    permissions:
      contents: write
    needs: deploy-prod
    steps:
      - uses: actions/checkout@v4
      - name: Push latest image tag as github tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.deploy-prod.outputs.tag }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}